#!/bin/sh
set -e

DEALCALCULATOR=
WORKTHEDEAL=
CONTRACTINTERFACE=
DEALERINTERFACE=
IMS=
INGEST=
CAPSAUTH=
VVG=
VVS=
DOCUMENTSERVICE=
LEADSWS=
SMARTCALCS=
LEADSERVICE=
STEP3CONSUMER=

SHUTDOWN_WAIT=30



# argument reading using space 

while [[ "$#" -gt 0 ]]
do 
key="$1"
case $key in 
    --ci)
    LPATH="$2"
    break
    ;;
    --di)
    LPATH="$2"
    break
    ;;
    --wtd)
    LPATH="$2"
    break
    ;;
    --dealcalc)
    LPATH="$2"
    break
    ;;
    --ingest)
    LPATH="$2"
    break
    ;;
    *)
    echo "Invalid arguments "
    POSITIONAL+=("$1")
    break
    ;;
esac
done


# Argument reading using getopts 

echo "PATH : ${LPATH}"


is_tomcat_running() {
    #if [[ "8080"=~$(netstat -a | grep 8080 | grep -v grep | awk '{ print $3 }' | head -n 1) ]] ; then echo "Tomcat is running "; fi
    echo $(netstat -ano | grep 8080 | grep -v grep | awk '{ print $6 }' )
}


start() {
    pid=$(is_tomcat_running)
    if [ -n "$pid" ]
    then
        echo "Tomcat is already running (pid: $pid)"
    else
        # Start tomcat
        echo "Starting tomcat"
        $tomcat8/bin/startup.sh
    fi
    return 0
}

stop() {
    pid=$(is_tomcat_running)
    if [ -n "$pid" ]
    then
        echo "Stopping Tomcat"
        $tomcat8/bin/shutdown.sh

        let kwait=$SHUTDOWN_WAIT
        count=0
        count_by=5
        until [ $(ps -a | grep -c $pid) = '0' ] || [ $count -gt $kwait ]
        do
            echo "Waiting for processes to exit. Timeout before we kill the pid: ${count}/${kwait}"
            sleep $count_by
            let count=$count+$count_by;
        done

        if [ $count -gt $kwait ]; then
            echo "Killing processes which didn't stop after $SHUTDOWN_WAIT seconds"
            taskkill /F /PID $pid
        fi
    else
        echo "Tomcat is not running"
    fi

    return 0
}



appdeploy() {
    status=$(is_tomcat_running)
    if [ -n "$status" ]
    then
        echo "Tomcat is already running (status: $status)"
    else
        # Start tomcat
        echo "Deploying Application Instance"

    fi
    return 0
}


case $2 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        pid=$(tomcat_pid)
        if [ -n "$pid" ]
        then
            echo "Tomcat is running with pid: $pid"
        else
            echo "Tomcat is not running"
        fi
        ;;
esac

exit 0


#### Configuration ###

# Codebase information , directory paths 

# Undeploy


# Deploy

# which Deployable 


